# Generated by Django 2.0.5 on 2019-05-09 11:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('book_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('page_count', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='BookCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('publisher_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'company_alt_sinifi_book',
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(choices=[('A', 'AUDI'), ('B', 'BMW'), ('M', 'MERCEDES'), ('V', 'VOLVO')], default='A', max_length=1)),
                ('model', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('comment_content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='GameCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('platform', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LearningFields',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tamsayi', models.IntegerField(blank=True, db_column='tam_sayi', db_index=True, default=5, help_text='Buraya girilen sayı tam sayı olmalıdır', null=True, unique=True, verbose_name='Tam Sayı')),
                ('small_integer_field', models.SmallIntegerField()),
                ('integer_field', models.IntegerField()),
                ('big_integer_field', models.BigIntegerField(default=1)),
                ('positive_integer_field', models.PositiveIntegerField()),
                ('positive_small_integer_field', models.PositiveSmallIntegerField()),
                ('float_field', models.FloatField()),
                ('decimal_field', models.DecimalField(decimal_places=5, max_digits=10)),
                ('boolean_field', models.BooleanField()),
                ('char_field', models.CharField(max_length=50)),
                ('text_field', models.TextField()),
                ('date_field', models.DateField(auto_now_add=True)),
                ('date_time_field', models.DateTimeField(auto_now=True)),
                ('time_field', models.TimeField()),
                ('email_field', models.EmailField(max_length=254)),
                ('ip_address_field', models.GenericIPAddressField(unpack_ipv4=True)),
                ('slug_field', models.SlugField()),
                ('url_field', models.URLField()),
                ('uuid_field', models.UUIDField()),
                ('binary_field', models.BinaryField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Ürün İsmi')),
                ('content', models.TextField(verbose_name='Ürün Açıklaması')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(editable=False, unique=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Ürün',
                'verbose_name_plural': 'Ürünler',
            },
        ),
        migrations.CreateModel(
            name='UserDetail',
            fields=[
                ('address', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Intro',
            fields=[
                ('comment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='learning.Comment')),
                ('book_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='learning.Book')),
                ('intro_comment', models.TextField()),
            ],
            bases=('learning.book', 'learning.comment'),
        ),
        migrations.AddField(
            model_name='product',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', related_query_name='product', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gamecompany',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_gamecompany_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='product',
            field=models.ManyToManyField(related_name='categories', related_query_name='category', to='learning.Product'),
        ),
        migrations.AddField(
            model_name='bookcompany',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_bookcompany_related', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ProxyBook',
            fields=[
            ],
            options={
                'ordering': ['name'],
                'proxy': True,
                'indexes': [],
            },
            bases=('learning.book',),
        ),
    ]
